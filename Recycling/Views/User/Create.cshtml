@model Recycling.Domain.Models.User

@{
    ViewBag.Title = "Create";
}



<h2>Create</h2>

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { @onsubmit = "return validation();" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Company, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Company.Id, ViewBag.Companies as IEnumerable<SelectListItem>)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @id = "pass1" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Retype Password", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password("RetypeClientPassword", null, new { @id = "pass2" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityQuestion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityQuestion)
                @Html.ValidationMessageFor(model => model.SecurityQuestion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityAnswer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityAnswer)
                @Html.ValidationMessageFor(model => model.SecurityAnswer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, new SelectList(
               new List<Object>{ 
                       new { value = "User" , text = "User" },
                       new { value = "Admin" , text = "Admin" },
                    },
                  "value",
                  "text",
                   2), new { @class = "control-label col-md-2" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="validation()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    function validation() {
        var pass1 = document.getElementById("pass1").value;
        var pass2 = document.getElementById("pass2").value;
        if (pass1 != pass2) {
            alert("Passwords Do not match");
            document.getElementById("pass1").style.borderColor = "#E34234";
            document.getElementById("pass2").style.borderColor = "#E34234";
            return false;
        }
        else {
            return true;
        }
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
