@model Recycling.Domain.Models.ProductDTO

@{
    ViewBag.Title = "Create Product";
}
<script src="~/Scripts/add-form.js"></script>
<h2>Create</h2>


@using (Html.BeginForm("Create", "Product", FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.product.UPC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.UPC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.UPC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.ParentCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.ParentCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.ParentCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.TotalWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.TotalWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.TotalWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", ViewData["Category"] as IEnumerable<SelectListItem>, "-- Select Category --", new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.product.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Product Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group  col-md-4">
                    <input type="text" class="form-control" disabled>
                    <span class="input-group-btn">
                        <span class="btn btn-default btn-file ">
                            Browse<input type="file" value="Browse" name="ProductImage">
                        </span>
                    </span>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.region.Id, new List<SelectListItem> {
                        new SelectListItem { Text = "Cape Breton", Value = "1"},
                        new SelectListItem { Text = "Eastern", Value = "2"},
                        new SelectListItem { Text = "HRM", Value = "3"},
                        new SelectListItem { Text = "Northern", Value = "4"},
                        new SelectListItem { Text = "South Shore", Value = "5"},
                        new SelectListItem { Text = "Valley", Value = "6"},
                        new SelectListItem { Text = "Western", Value = "7"}
                    }, "-- Select Region --", htmlAttributes: new { @class = "btn btn-default dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="Constituentlist">
            @Html.LabelFor(Model => Model.product.NumberOfConstituent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="dropdown col-md-10">
                @Html.DropDownListFor(Model => Model.product.NumberOfConstituent, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "1", Value = "1"},
                        new SelectListItem { Text = "2", Value = "2"},
                        new SelectListItem { Text = "3", Value = "3"},
                        new SelectListItem { Text = "4", Value = "4"},
                        new SelectListItem { Text = "5", Value = "5"},
                        new SelectListItem { Text = "6", Value = "6"},
                        new SelectListItem { Text = "7", Value = "7"}
                    }, "-- Select Number --", htmlAttributes: new { @class = "btn btn-default dropdown-toggle", @id = "cnumber" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
