@model Recycling.Domain.Models.ProductDTO

@{
    ViewBag.Title = "Details";
}

<h2>Product Details</h2>

<div>
    <h4>Name: @Model.pHasCs.FirstOrDefault().Product.ProductName</h4>
    <h5>UPC: @Model.pHasCs.FirstOrDefault().Product.UPC</h5>
    @Html.ActionLink("Edit", "Edit", new { id = Model.product.Id }) |
    @Html.ActionLink("Back to List", "Index")
    <hr />
    <div class="table-responsive col-md-4">
        <img style="max-height: 400px; width:auto" src="~/@Model.product.ImagePath" alt="@Model.product.ProductName" />
    </div>
    <div class="table-responsive col-md-8 dl-horizontal ">
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.product.ProductName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.ProductName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.product.CompanyName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.CompanyName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.product.ParentCompany)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.ParentCompany)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.product.Weight)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.Weight)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.product.TotalWeight)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.TotalWeight)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.product.Category.CategoryName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.product.Category.CategoryName)
            </dd>
            <dt>
                @Html.DisplayName("Recyclability")
            </dt>
            @{
                var Recyclability 
            }
            <dd>
                @Html.Display(model => model.product.Category.CategoryName)
            </dd>
        </dl>

        <div id="piechart_3d"></div>;
        </table>
    </div>
</div>

<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    google.load("visualization", "1", { packages: ["corechart"] });
    google.setOnLoadCallback(drawChart);
    var list;
    var listToArray = new Array();
    $.ajax({
        url: "/product/getconstituents",
        data: {id : @Model.product.Id},
        type: "GET",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (list) {
            try {   // tried to parse it manually to see if anything changes.
                listToArray.push(["Constituent Name", "Part Weight"]);
                for(i = 0; i < list.length; i++){
                    listToArray.push([list[i].CName, list[i].PartWeight]);
                }
            }
            catch (err) {

            }
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert(thrownError + 'xhr error -- ' + xhr.status);
        }
    });



    function drawChart() {
        var data = google.visualization.arrayToDataTable(listToArray);

        var options = {
            title: 'Part weight(g) of each constituent',
            is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
        chart.draw(data, options);
    }
</script>